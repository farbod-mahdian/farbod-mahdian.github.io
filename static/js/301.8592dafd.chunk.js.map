{"version":3,"file":"static/js/301.8592dafd.chunk.js","mappings":"+IACA,MAA2B,2BAA3B,EAA6D,uBAA7D,EAA8F,0B,SCiB9F,EAhBiB,SAACA,GAChB,OACE,gBAAIC,UAAWC,EAAf,WACE,iBAAMD,UAAWC,EAAjB,SAAgCF,EAAMG,QACtC,mBACA,kBAAMF,UAAWC,EAAjB,WACE,mBAAQE,QAASJ,EAAMK,SAAvB,SACGL,EAAMM,OAAS,SAAW,UAE7B,mBAAQF,QAASJ,EAAMO,OAAvB,mBACA,mBAAQH,QAASJ,EAAMQ,aAAvB,2B,0BCXR,EAA2B,2BC0D3B,EArDiB,SAACR,GAChB,IAAMS,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GACrBC,GAAWF,EAAAA,EAAAA,YAAWG,EAAAA,GAE5B,OAAKb,EAAMM,OAwBwB,IAA7BG,EAAQK,UAAUC,QACb,+CAIP,eAAId,UAAWC,EAAf,SACGO,EAAQK,UAAUE,KAAI,SAACC,GAAD,OACrB,SAAC,EAAD,CAEEd,KAAMc,EAAKd,KACXG,OAAQN,EAAMM,OACdE,aAAcI,EAASM,gBAAgBC,KACrC,KACAF,EAAKG,GACLpB,EAAMM,QAERC,OAAQK,EAASS,cAAcF,KAAK,KAAMF,EAAKG,GAAIpB,EAAMM,QACzDD,SAAUI,EAAQa,WAAWH,KAAK,KAAMF,EAAKG,GAAIpB,EAAMM,SATlDW,EAAKG,SA/BkB,IAAhCX,EAAQc,aAAaR,QAChB,+CAIP,eAAId,UAAWC,EAAf,SACGO,EAAQc,aAAaP,KAAI,SAACC,GAAD,OACxB,SAAC,EAAD,CAEEd,KAAMc,EAAKd,KACXG,OAAQN,EAAMM,OACdE,aAAcI,EAASM,gBAAgBC,KACrC,KACAF,EAAKG,GACLpB,EAAMM,QAERC,OAAQK,EAASS,cAAcF,KAAK,KAAMF,EAAKG,GAAIpB,EAAMM,QACzDD,SAAUI,EAAQa,WAAWH,KAAK,KAAMF,EAAKG,GAAIpB,EAAMM,SATlDW,EAAKG","sources":["webpack://todos/./src/components/TodoItem.module.css?9d54","components/TodoItem.js","webpack://todos/./src/components/TodoList.module.css?9d82","components/TodoList.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"todoItem\":\"TodoItem_todoItem__RSqDJ\",\"text\":\"TodoItem_text__3hdj5\",\"actions\":\"TodoItem_actions__egzgF\"};","import classes from './TodoItem.module.css';\r\n\r\nconst TodoItem = (props) => {\r\n  return (\r\n    <li className={classes.todoItem}>\r\n      <span className={classes.text}>{props.text}</span>\r\n      <hr />\r\n      <span className={classes.actions}>\r\n        <button onClick={props.onToggle}>\r\n          {props.isDone ? 'Undone' : 'Done'}\r\n        </button>\r\n        <button onClick={props.onEdit}>Edit</button>\r\n        <button onClick={props.onRemoveTodo}>Delete</button>\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"todoList\":\"TodoList_todoList__gRl65\"};","import TodoItem from './TodoItem';\r\nimport { TodoContext } from '../store/todo-context';\r\nimport { UIContext } from '../store/UI-context';\r\nimport { useContext } from 'react';\r\nimport classes from './TodoList.module.css';\r\n\r\nconst TodoList = (props) => {\r\n  const todoCtx = useContext(TodoContext);\r\n  const modalCtx = useContext(UIContext);\r\n\r\n  if (!props.isDone) {\r\n    if (todoCtx.pendingItems.length === 0) {\r\n      return <p>No items available</p>;\r\n    }\r\n\r\n    return (\r\n      <ul className={classes.todoList}>\r\n        {todoCtx.pendingItems.map((item) => (\r\n          <TodoItem\r\n            key={item.id}\r\n            text={item.text}\r\n            isDone={props.isDone}\r\n            onRemoveTodo={modalCtx.showRemoveModal.bind(\r\n              null,\r\n              item.id,\r\n              props.isDone\r\n            )}\r\n            onEdit={modalCtx.showEditModal.bind(null, item.id, props.isDone)}\r\n            onToggle={todoCtx.toggleList.bind(null, item.id, props.isDone)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  } else {\r\n    if (todoCtx.doneItems.length === 0) {\r\n      return <p>No items available</p>;\r\n    }\r\n\r\n    return (\r\n      <ul className={classes.todoList}>\r\n        {todoCtx.doneItems.map((item) => (\r\n          <TodoItem\r\n            key={item.id}\r\n            text={item.text}\r\n            isDone={props.isDone}\r\n            onRemoveTodo={modalCtx.showRemoveModal.bind(\r\n              null,\r\n              item.id,\r\n              props.isDone\r\n            )}\r\n            onEdit={modalCtx.showEditModal.bind(null, item.id, props.isDone)}\r\n            onToggle={todoCtx.toggleList.bind(null, item.id, props.isDone)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n};\r\n\r\nexport default TodoList;\r\n"],"names":["props","className","classes","text","onClick","onToggle","isDone","onEdit","onRemoveTodo","todoCtx","useContext","TodoContext","modalCtx","UIContext","doneItems","length","map","item","showRemoveModal","bind","id","showEditModal","toggleList","pendingItems"],"sourceRoot":""}